/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/projects/": {
    /**
     * Get Projects 
     * @description Return the configurations for all projects in the PROJECTS_DIR directory.
     */
    get: operations["get_projects_projects__get"];
  };
  "/project/": {
    /**
     * Create Project 
     * @description Scaffold a new project in PROJECTS_DIR with a configuration file and some folders.
     * 
     * :param configuration: the configuration of the new project to create.
     * :return: the configuration of the new project that was created.
     */
    post: operations["create_project_project__post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * ComponentConfiguration 
     * @description Defines a configuration for a single dashboard component.
     */
    ComponentConfiguration: {
      /** Title */
      title: string;
      /** Component */
      component: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: (components["schemas"]["ValidationError"])[];
    };
    /**
     * PanelConfiguration 
     * @description Defines a configuration for a single panel, which contains a list of components.
     */
    PanelConfiguration: {
      /** Title */
      title: string;
      /** Components */
      components: (components["schemas"]["ComponentConfiguration"])[];
    };
    /**
     * ProjectConfiguration 
     * @description Defines a configuration for an entire project layout.
     * 
     * Projects are composed of panels, which are in turn composed of components.
     */
    ProjectConfiguration: {
      /** Title */
      title: string;
      /** Description */
      description: string;
      /** Panels */
      panels: (components["schemas"]["PanelConfiguration"])[];
      /** Vertical */
      vertical: boolean;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /**
   * Get Projects 
   * @description Return the configurations for all projects in the PROJECTS_DIR directory.
   */
  get_projects_projects__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["ProjectConfiguration"])[];
        };
      };
    };
  };
  /**
   * Create Project 
   * @description Scaffold a new project in PROJECTS_DIR with a configuration file and some folders.
   * 
   * :param configuration: the configuration of the new project to create.
   * :return: the configuration of the new project that was created.
   */
  create_project_project__post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectConfiguration"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ProjectConfiguration"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
